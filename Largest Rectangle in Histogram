public int largestRectangleArea(int[] heights) {
        int n=heights.length;
        Stack<Integer> s=new Stack<>();
        int left[]= new int[n];
        int right[]= new int[n];
        
        for(int i=0;i<n;i++){
            while(!s.isEmpty() && heights[s.peek()]>=heights[i]){
                s.pop();
                
            }
            left[i]=s.isEmpty()? 0: s.peek()+1;
            s.push(i);
        }
        while(!s.isEmpty()) s.pop();
        
        for(int i=n-1;i>=0;i--){
            while(!s.isEmpty() && heights[s.peek()]>=heights[i]){
                s.pop();
            }
            right[i]=s.isEmpty()? n-1: s.peek()-1;
            s.push(i);
        }
        int maxA=0;
        for(int i=0;i<n;i++){
            maxA=Math.max(maxA,heights[i]*(right[i]-left[i]+1));
        }
        return maxA;
    }
}
