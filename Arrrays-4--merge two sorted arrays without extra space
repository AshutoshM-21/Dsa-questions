//insertion sorting
int i= n-1;
int j=0;
while(i>=0 && j<m){
if(arr1[i]> arr2[j]{
swap
}
i--;
j--;
}
Arrays.sort1;
Arrays.sort2;
}
///////////// GAP METHOD /////////////////



class Solution
{
    //Function to merge the arrays.
    private static int nextGap(int gap){
        if(gap<=0)return 0;
        return ((gap/2)+gap%2);
    }
    public static void merge(long arr1[], long arr2[], int n, int m) 
    {
        // code here 
        int i,j,gap(m+n);
        for(gap=nextGap(gap));gap<0;gap=nextGap(gap)){
            for(int i=0;i+gap <n;i++){
                if(arr1[i]>arr1[i+gap]){
                    long temp=arr1[i];
                    arr1[i]=arr1[i+gap];
                    arr1[i]=temp;
                }
            }
            for(j=gap>n? gap-n:0;i<n &&j<m;i++,j++){
                if(arr1[i]>arr2[j]){
                    long temp=arr1[i];
                    arr1[i]=arr2[j];
                    arr2[j]=temp; 
                }
            }
            if(j<m){
                for(int j=0;j+gap<m;j++){
                     long temp=arr2[j];
                    arr2[j]=arr2[j+gap];
                    arr1[j+gap]=temp;
                }
            }
        }
       
    }
}
