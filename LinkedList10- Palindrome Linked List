class Solution {
    public ListNode middle(ListNode head){
        ListNode fast= head;
         ListNode slow = head;
        while(fast.next!= null && fast.next.next!= null){
            fast= fast.next.next;
            slow= slow.next;
        }
        return slow;
    }
    public ListNode reverse(ListNode head){
        ListNode curr= head;
        ListNode prev= null;
        while(curr!= null){
            ListNode temp =curr.next;
            curr.next=prev;
            prev=curr;
            curr=temp;
        }
        return prev;
    }
    
    public boolean isPalindrome(ListNode head) {
        if(head==null || head.next==null) return true;
        ListNode mid=middle(head);
        ListNode p2=reverse(mid.next);
        
        ListNode p1= head;
        while(p2!=null){
            if(p1.val!=p2.val){
                return false;
            }
            p1=p1.next;
            p2=p2.next;
        }
        return true;
        
        
    }
}
