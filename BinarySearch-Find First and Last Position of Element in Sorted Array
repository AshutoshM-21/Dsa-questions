class Solution {
    public static int first(int []nums,int target){
        int s=0;
        int e=nums.length-1;
        int ans=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(nums[mid]<target)s=mid+1;
            else if(nums[mid]>target)e=mid-1;
            else{
                ans= mid;
                e=mid-1;
            }
        }
        return ans;
    }
     public static int last(int[] nums,int target){
        int s=0;
        int e=nums.length-1;
        int ans=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(nums[mid]<target)s=mid+1;
            else if(nums[mid]>target)e=mid-1;
            else{
                ans= mid;
                s=mid+1;
            }
        }
        return ans;
    }
    public int[] searchRange(int[] nums, int target) {
        int result[]=new int[2];
        result[0]=first(nums,target);
        result[1]=last(nums,target);
        return result;
    }
}
